// 取小數點第幾位
@function _decimal($number)
  @if $exact
    @return $number
  @else
    $n: 1
    @for $i from 1 through 2
        $n: $n * 10
    @return floor($number * $n) / $n



// 初始化設定
// 設計稿是否有滾動條
$HAS_SCROLLBAR: true 
// 面相切版的最外寬度
$DOCUMENT_WIDTH: 1920
// 面相切版的壓縮寬度，可能作圖 1920，但是用 1366 尺寸做，可以設定成 1366
// 這樣 $SCALE 就可以直接壓縮圖片尺寸，符合壓縮結果
$scaleWidth: 1920
@if $HAS_SCROLLBAR == true
  $scaleWidth: $scaleWidth - 17
// 內原始寬
$ORIGIN_SCALE_WIDTH: $scaleWidth
// 圖片路徑
$IMG_LOCAL: 'https://s3-us-west-2.amazonaws.com/s.cdpn.io/1451969/'
// 參閱 bImgT, aImgT, bgImgT 三個語法
$IMG_TYPE: '.png'
// 尺寸是否絕對精確
$exact: false
// 比例尺，決定 =fz =lh =ls =imgW imgW() 壓縮比例
$SCALE: _decimal($ORIGIN_SCALE_WIDTH / $DOCUMENT_WIDTH)



// 個別尺寸，同 bootstrap
$xl: 1200
$lg: 992
$md: 768
$sm: 576
$ss: 320



// 全域汙染區塊
$i: 1
$aniTime: 60 // 單位 s
$aniName: ani-name
// for loop
=for($to, $from: 1)
  @for $index from $from through $to
    $i: $index !global
    @content
// 以下兩個無汙染
=forCh($to, $from: 1)
  @for $index from $from through $to
    $i: $index !global
    +ch($i)
      @content
=forTy($to, $from: 1)
  @for $index from $from through $to
    $i: $index !global
    +ty($i)
      @content
// 寬度重置及汙染，請搭配 RE 謹慎使用
@function W($width)
  $scaleWidth: $width !global
  @return $width
=RE
  $scaleWidth: $ORIGIN_SCALE_WIDTH !global
// 動畫函數
// 聲明 keyframes
=kf($name: $aniName, $time: 60)
  $aniName: $name !global
  $aniTime: $time !global
  @keyframes #{$name}
    @content
// keyframe 時間軸
@function t($second: $aniTime)
  @return _decimal($second / $aniTime * 100)#{'%'}
// 如果只有一個動畫且 kf 方法聲明在頂部，直接調用 +ani 即可
=ani($duration: ease, $stopOrIni: infinite)
  animation: $aniName $aniTime + s $duration $stopOrIni



// media系列
// 響應式網頁設計 Responsive Website Design
=rwd($rwdMaxWidth: $md) 
  @media screen and (max-width: $rwdMaxWidth + px)
    @content
=rwdMin($rwdMinWidth: $md + 1)
  @media screen and (min-width: $rwdMinWidth + px)
    @content
=rwdMinMax($rwdMinWidth: $sm + 1, $rwdMaxWidth: $md) 
  @media screen and (min-width: $rwdMinWidth + px) and (max-width: $rwdMaxWidth + px)
    @content



// 判斷是否有 hover 事件 (不常使用)
=hover
  @media not all and (hover: none), (-ms-high-contrast: none)
    &:hover
      @content



// 取得顏色
@function getColor($color, $index: 1)
  @return nth($color, $index)



// 文字系列
=fz($fontSize)
  font-size: ($fontSize * $SCALE) + px
=lh($lineHeight)
  // origin: $fontSize + 9
  line-height: ($lineHeight * $SCALE) + px
=ls($letterSpacing)
  @if $SCALE < 1
    letter-spacing: ($letterSpacing * 0.013) + px
  @else
    letter-spacing: ($letterSpacing * 0.02) + px



// 子選擇器
// child
=ch($child)
  &:nth-child#{'(' + $child + ')'}
    @content
=nCh($child)
  &:not(:nth-child#{'(' + $child + ')'})
    @content
=fCh
  &:first-child
    @content
=nfCh
  &:not(:first-child)
    @content
=lCh
  &:last-child
    @content
=nlCh
  &:not(:last-child)
    @content
=douCh($child1, $child2)
  &:nth-child#{'(n + ' + $child1 + ')'}:nth-child#{'(-n + ' + $child2 + ')'}
    @content
// of-type
=ty($type)
  &:nth-of-type#{'(' + $type + ')'}
    @content
=nTy($type)
  &:not(:nth-of-type#{'(' + $type + ')'})
    @content
=fTy
  &:first-of-type
    @content
=nfTy
  &:not(:first-of-type)
    @content
=lTy
  &:last-of-type
    @content
=nlTy
  &:not(:last-of-type)
    @content
=douTy($type1, $type2)
  &:nth-of-type#{'(n + ' + $type1 + ')'}:nth-of-type#{'(-n + ' + $type2 + ')'}
    @content



// before/ after
// 特別款: 啥都沒有
=b
  &::before
    content: ""
    display: inline-block
    @content
=a
  &::after
    content: ""
    display: inline-block
    @content
// 文字型
=bFont($text)
  &::before
    content: "#{$text}"
    display: inline-block
    @content
=aFont($text)
  &::after
    content: "#{$text}"
    display: inline-block
    @content
// 背景型
=bBg($bgColor, $width, $height)
  &::before
    content: ""
    display: inline-block
    background-color: $bgColor
    width: $width
    height: $height
    @content
=aBg($bgColor, $width, $height)
  &::after 
    content: ""
    display: inline-block
    background-color: $bgColor
    width: $width
    height: $height
    @content
// 圖片型		
=bImg($imgName, $imgWidth, $imgHeight)
  &::before
    content: ""
    display: inline-block
    background: url + '(' + $IMG_LOCAL + $imgName + ')'no-repeat
    width: imgw($imgWidth)
    height: imgw($imgHeight)
    background-size: 100% 100%
    @content
=bImgT($imgName, $imgWidth, $imgHeight, $type: $IMG_TYPE)
  &::before
    content: ""
    display: inline-block
    background: url + '(' + $IMG_LOCAL + $imgName + $type + ')'no-repeat
    width: imgw($imgWidth)
    height: imgw($imgHeight)
    background-size: 100% 100%
    @content
=aImg($imgName, $imgWidth, $imgHeight, $type: $IMG_TYPE)
  &::after
    content: ""
    display: inline-block
    background: url + '(' + $IMG_LOCAL + $imgName + ')'no-repeat
    width: imgw($imgWidth)
    height: imgw($imgHeight)
    background-size: 100% 100%
    @content
=aImgT($imgName, $imgWidth, $imgHeight, $type: $IMG_TYPE)
  &::after
    content: ""
    display: inline-block
    background: url + '(' + $IMG_LOCAL + $imgName + $type + ')'no-repeat
    width: imgw($imgWidth)
    height: imgw($imgHeight)
    background-size: 100% 100%
    @content



// border箭頭
=arrow($direction, $color, $topWidth, $rightWidth: $topWidth, $bottomWidth: $topWidth, $leftWidth: $topWidth)
  position: absolute
  @if $direction == right
    border-top: $topWidth#{px} solid transparent
    border-right: $rightWidth#{px} solid transparent
    border-bottom: $bottomWidth#{px} solid transparent
    border-left: $leftWidth#{px} solid $color
  @if $direction == left
    border-top: $topWidth#{px} solid transparent
    border-right: $rightWidth#{px} solid $color
    border-bottom: $bottomWidth#{px} solid transparent
    border-left: $leftWidth#{px} solid transparent
  @if $direction == top
    border-top: $topWidth#{px} solid transparent
    border-right: $rightWidth#{px} solid transparent
    border-bottom: $bottomWidth#{px} solid $color
    border-left: $leftWidth#{px} solid transparent
  @if $direction == bottom
    border-top: $topWidth#{px} solid $color
    border-right: $rightWidth#{px} solid transparent
    border-bottom: $bottomWidth#{px} solid transparent
    border-left: $leftWidth#{px} solid transparent



// 圖片系列
// 有父層的圖片預設樣式
=img
  img
    width: 100%
    display: block 
// 圖片寬度fnc與mixin
@function imgW($imgSize)
  @return _decimal(($imgSize * $SCALE)) + px
=imgW($imgSize)
  width: _decimal($imgSize * $SCALE) + px
// 圖片盒子高度設定(預設圖片置中置中)，下在img的前一層，使圖片大小等比縮放
// <html> e.g. .img>img
=coverImg($thisWidth, $normalImageWidth, $normalImageHeight)
  padding-top: ($thisWidth / ($normalImageWidth / $normalImageHeight)) / ($thisWidth / 100) * 1%
  width: 100%
  margin: 0 auto
  overflow: hidden
  position: relative
  object-fit: cover
  img
    position: absolute
    left: 50%
    top: 50%
    width: 100%
    height: 100%
    transform: translate(-50%,-50%)
// 背景圖片高度判定 $scaleWidth-> 瀏覽器寬度
=bgH($thisWidth, $documentWidth, $normalWidth, $normalHeight)
  height: _decimal(($documentWidth / 100) * ((($normalHeight * ($thisWidth / $normalWidth))/ ($documentWidth / 100)) / ($documentWidth / 100))) + vw
// 背景圖片
=bgImg($imgName, $imgOtherData...)
  background: url + '(' + $IMG_LOCAL + $imgName + ')'$imgOtherData
=bgImgT($imgName, $type: $IMG_TYPE, $imgOtherData...)
  background: url + '(' + $IMG_LOCAL + $imgName + $type + ')'$imgOtherData
// 簡單線性漸層
=gradient($bgGradientDirectionMain, $bgGradientData...)
  background: linear-gradient(to $bgGradientDirectionMain, $bgGradientData)



// 切版佈局 $size-> 己寬, $outSize-> 父寬, $num-> 數量
// 寬度佈局
=w($selfWidth, $parentWidth: $scaleWidth)
  width: _decimal(($selfWidth / ($parentWidth / 100))) * 1%
@function w($paddingWidth, $outSize: $scaleWidth)
  @return _decimal($paddingWidth / ($outSize / 100)) * 1%
// 均分推右邊(child版本)
=prCh($num, $selfWidth, $parentWidth: $scaleWidth)
  &:not(:nth-child#{'(' + $num + 'n)'})
    margin-right: _decimal((($parentWidth - ($selfWidth * $num)) / ($num - 1)) / ($parentWidth / 100)) * 1%
// 均分推右邊(child版本)
=prTy($num, $selfWidth, $parentWidth: $scaleWidth)
  &:not(:nth-of-type#{'(' + $num + 'n)'})
    margin-right: _decimal((($parentWidth - ($selfWidth * $num)) / ($num - 1)) / ($parentWidth / 100)) * 1%
// vw, vh推距離(預設為1366*974->1920*1080電腦)
@function vw($paddingWidth, $documentWidth: $scaleWidth)
  @return _decimal(($paddingWidth / ($documentWidth / 100))) + vw
// vh
@function vh($paddingHeight, $documentHeight: 974)
  @return _decimal(($paddingHeight / ($documentHeight / 100))) + vh
// 兩欄取寬
=mW($minusWidth) 
  width: calc(100% - #{($minusWidth) + px})
@function mW($minusWidth) 
  @return calc(100% - #{($minusWidth) + px})



// absolute定位
// 上下左右置中
=posC($posType: absolute)
  position: $posType
  left: 50%
  top: 50%
  transform: translate(-50%, -50%)
=posLC($posType: absolute)
  position: $posType
  left: 50%
  transform: translateX(-50%)
=posRC($posType: absolute)
  position: $posType
  right: 50%
  transform: translateX(50%)
=posTC($posType: absolute)
  position: $posType
  top: 50%
  transform: translateY(-50%)
=posBC($posType: absolute)
  position: $posType
  bottom: 50%
  transform: translateY(50%)



// 漸層文字
=gradientText($color)
  background: $color
  -webkit-background-clip: text
  -webkit-text-fill-color: transparent



// 漸層文字框線
=gradientTextStroke($color, $strokeWidth: 2, $textFillColor: #fff)
  background: $color
  -webkit-text-fill-color: $textFillColor
  -webkit-text-stroke: $strokeWidth transparent
  -webkit-background-clip: text